general:
  artifacts:
    - "app/.meteor/local/log"
    - "log"

dependencies:
  cache_directories:
    - "~/.npm"
    - "~/.meteor"
    - "app/node_modules"
    - "app/.meteor/local/build"
    - "app/.meteor/local/bundler-cache"
    - "app/.meteor/local/isopacks"
    - "app/.meteor/local/plugin-cache"
    - "/home/ubuntu/nvm/versions/node/v5.2.0/bin"
    - "/home/ubuntu/nvm/versions/node/v5.2.0/lib/node_modules"

  override:
    # -- CACHE METEOR --
    # Restore the meteor symlink
    - if [ -d ~/.meteor ]; then sudo ln -s ~/.meteor/meteor /usr/local/bin/meteor; fi
    # Install Meteor if the cache didn't restore it
    - if [ ! -e ~/.meteor/meteor ]; then curl https://install.meteor.com | sh; fi

    # -- INSTALL METEOR PACKAGES --
    - (cd app; meteor list) # triggers the packages to download and install
    - (cd app; meteor npm install --production)

checkout:
  post:
    - git submodule update --init

test:
  override:
    # Run tests
    - (cd app; meteor npm test)
    - (cd app; meteor npm run test-app)
    # Publish code coverage data to CodeClimate. $CODECLIMATE_REPO_TOKEN is an environment variable setup in CircleCI.
    # Disabled until we get tests reporting to lcov again
    # - npm install -g codeclimate-test-reporter@0.1.1
    # - (cd src/webapp; CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN codeclimate-test-reporter < log/coverage/report-lcov/lcov.info)

deployment:
  production:
    branch: master
    commands:
      # Decrypt Meteor Up config
      - (cd config/production; gpg --no-use-agent --quiet --passphrase $MUP_PASSPHRASE -o mup.json -d mup.json.gpg)

      # Deploy
      - npm install -g mup # install meteor-up for deployment
      - (cd config/production; mup deploy)

      # Notify Rollbar about deploy
      - curl https://api.rollbar.com/api/1/deploy/ -F access_token=$ROLLBAR_SERVER_ACCESS_TOKEN -F environment=production -F revision=$CIRCLE_SHA1 -F local_username=$CIRCLE_USERNAME
