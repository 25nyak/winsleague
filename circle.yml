machine:
  services:
    - docker

general:
  artifacts:
    - "src/webapp/client/log"

dependencies:
  cache_directories:
    - "~/docker"

  override:
    - docker info
    - sudo pip install -U docker-compose==1.2.0
    - cp src/db/secrets.example.env src/db/secrets.env
    # If there's a base image cached, load it.
    # A click on CircleCI's "Clear Cache" will make sure we start with a clean slate.
    - mkdir -p ~/docker
    - if [[ -e ~/docker/images.tar ]]; then docker load -i ~/docker/images.tar; fi
    # If cache doesn't exist, pull the base images so we can easily save them later
    - if [[ ! -e ~/docker/images.tar ]]; then docker pull leaguewinspool/webapp-base:latest; fi
    - if [[ ! -e ~/docker/images.tar ]]; then docker pull mysql:5.6; fi
    - if [[ ! -e ~/docker/images.tar ]]; then docker pull nginx:1.9.0; fi
    - (cd src; docker-compose -f docker-production.yml build)
    # Otherwise, we built one above, and save it.
    - if [[ ! -e ~/docker/images.tar ]]; then docker save -o ~/docker/images.tar leaguewinspool/webapp-base:latest mysql:5.6 nginx:1.9.0; fi
    # Print the history so that we can investigate potential steps which fatten
    # the image needlessly.
    - docker history src_webapp
    # Bring up the environment as a daemon (-d) to not block tests
    - (cd src; docker-compose -f docker-production.yml up -d)

test:
  override:
    # Run client-side tests. We need to manually specify the gruntfile because the container's working directory is /webapp/server
    - (cd src; docker-compose -f docker-production.yml run webapp grunt test --gruntfile /webapp/client/Gruntfile.js)
    # Run server-side tests.
    - (cd src; docker-compose -f docker-production.yml run webapp grunt test)
    # Publish code coverage data to CodeClimate. $CODECLIMATE_REPO_TOKEN is an environment variable setup in CircleCI.
    - (cd src; docker-compose -f docker-production.yml run --no-deps -e CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN webapp grunt exec:publishCodeCoverageMetrics --gruntfile /webapp/client/Gruntfile.js)

deployment:
  hub:
    # Notify DockerHub to build the new container once the tests pass
    # Set on https://circleci.com/gh/league-wins-pool/league-wins-pool/edit#env-vars
    # From https://blog.rainforestqa.com/2014-12-08-docker-in-action-from-deployment-to-delivery-part-2-continuous-integration/
    branch: master
    commands:
      - $DEPLOY_WEBAPP
